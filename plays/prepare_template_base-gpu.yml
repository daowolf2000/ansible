---
- name: Создание LXC контейнера
  hosts: "{{ proxmox_node | default(lookup('env', 'PROXMOX_NODE')) }}"
  vars:
    template_name: base-gpu
    proxmox_conn: &proxmox_conn 
      node        : "{{ proxmox_node | default(lookup('env', 'PROXMOX_NODE')) }}"
      api_host    : "{{ lookup('env', 'PROXMOX_API_HOST') }}"
      api_user    : "{{ lookup('env', 'PROXMOX_USERNAME') }}"
      api_password: "{{ lookup('env', 'PROXMOX_PASSWORD') }}"

  tasks:
  - name: Check exists LXC template
    community.general.proxmox_vm_info:
      <<: *proxmox_conn
      name: "{{ template_name }}"
      validate_certs: false
    register: template_info                                                            
  
  - name: Debug
    ansible.builtin.debug:
      var: template_info
      verbosity: 1

  - name: Create template tasks
    when: 
      - template_info.proxmox_vms is defined
      - template_info.proxmox_vms | length == 0
    block:
    
    - name: Create new LXC
      community.general.proxmox:
        <<: *proxmox_conn 
        hostname  : "{{ template_name }}"
        password  : "{{ lookup('env', 'DEFAULT_PASSWORD') }}"
        pubkey    : "{{ lookup('file', lookup('env', 'DEFAULT_PUBKEY')) }}"
        ostemplate: "local:vztmpl/debian-12-standard_12.7-1_amd64.tar.zst"
        storage   : "local-lvm"
        memory    : 2048
        features:
          - nesting=1
          - keyctl=1
        netif:
          net0: "name=eth0,ip=dhcp,bridge=vmbr0"

    - name: Wait for create LXC 
      ansible.builtin.pause:
        seconds: 5


    - name: Start LXC
      community.general.proxmox:
        <<: *proxmox_conn 
        hostname: "{{ template_name }}"
        state: started
      failed_when: false

    - name: Wait for start LXC 
      ansible.builtin.pause:
        seconds: 15

  - name: Refresh inventory
    ansible.builtin.meta: refresh_inventory


- name: Prepare template LXC
  hosts: base-gpu
  
  tasks:
    - name: Проброс GPU
      ansible.builtin.include_role:
        name: proxmox
        tasks_from: lxc_nvidia_passthru

    - name: Установка Docker
      ansible.builtin.include_role:
        name: docker

    - name: Установка Nvidia CTK
      ansible.builtin.include_role:
        name: nvidia
        tasks_from: ctk_install
      vars:
        nvidia_ctk_no_cgroups: "true"

    - name: Конвертируем в шаблон
      ansible.builtin.include_role:
        name: proxmox
        tasks_from: lxc_convert_to_template


        