---
- name: Check terraform install and version
  ansible.builtin.shell: |
    set -o pipefail && terraform version -json | grep -o '"terraform_version": "[^"]*"' | cut -d '"' -f4'
  args:
    executable: /bin/bash
  changed_when: false
  failed_when: false
  register: terraform_cur_ver

- name: Debug (check version)
  ansible.builtin.debug:
    msg: "Current version: {{ terraform_cur_ver.stdout | default('none') }}, Required version: {{ terraform_ver }}. Need update: {{ terraform_cur_ver.stdout != terraform_ver }}"
    verbosity: 1

- name: Install Terraform
  ansible.builtin.include_tasks: install
  when: terraform_cur_ver is failed or terraform_cur_ver.stdout != terraform_ver

- name: Configure Terraform for {{ terraform_user }}
  ansible.builtin.include_tasks: configure
