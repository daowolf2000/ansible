---
- name: Get getent for "{{ terraform_user }}"
  ansible.builtin.getent: 
    database: passwd
    key     : "{{ terraform_user }}"
    split   : ":"

- name: Get home dir
  ansible.builtin.set_fact:
    terraform_home: "{{ getent_passwd[terraform_user][4] }}"

- name: Set terraform_proxmox_plugin_dir
  ansible.builtin.set_fact:
    terraform_proxmox_plugin_dir: "{{ terraform_home }}/.terraform.d/plugins/registry.terraform.io/telmate/proxmox/{{ terraform_proxmox_ver }}/{{ terraform_arch }}"

# FIX: Добавить проверку версии плагина
- name: Check provider install
  ansible.builtin.stat: 
    path:   "{{ terraform_proxmox_plugin_dir }}/terraform-provider-proxmox"
  register: _proxmox_provider

- name: Install provider
  when: not _proxmox_provider.stat.exists
  block:

  - name: Create directory for repo
    ansible.builtin.file: 
      path:   "{{ terraform_proxmox_plugin_dir }}"
      state:  directory
      mode:   0755

  - name: Install required tools
    ansible.builtin.package:
      name: golang
    become: true

  - name: Clone from git
    ansible.builtin.git:
      repo: "{{ terraform_proxmox_repo }}"
      dest: "/tmp/terraform-provider-proxmox"
      version: "v{{ terraform_proxmox_ver }}"
      update: yes

  - name: Run the Makefile
    community.general.make:
      chdir: "/tmp/terraform-provider-proxmox"

  - name: Create Terraform plugins directory
    ansible.builtin.file: 
      path:   "{{ terraform_proxmox_plugin_dir }}"
      state:  directory
      mode:   0755

  - name: Copy plugin for Proxmox
    ansible.builtin.copy:
      src:  "/tmp/terraform-provider-proxmox/bin/terraform-provider-proxmox" 
      dest: "{{ terraform_proxmox_plugin_dir }}"
      mode: 0755

  - name: Delete temp folders
    ansible.builtin.file:
      path: "/tmp/terraform-provider-proxmox"
      state: absent
